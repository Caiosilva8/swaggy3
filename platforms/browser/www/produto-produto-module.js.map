{"version":3,"sources":["webpack:///./src/app/produto/produto.module.ts","webpack:///./src/app/produto/produto.page.html","webpack:///./src/app/produto/produto.page.scss","webpack:///./src/app/produto/produto.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEA;AACQ;AAGrD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;AAaF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAX7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,kEAAmB;gBACnB,0DAAW;aACZ;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;AC7B9B,+gC;;;;;;;;;;;ACAA,+DAA+D,2I;;;;;;;;;;;;;;;;;;;;;;ACAb;AACM;AACsC;AACzD;AACI;AAOzC;IAQE,qBAAmB,OAAuB,EACvB,WAAyB,EACzB,MAAe,EACf,iBAAqC,EACrC,eAAiC;QAJjC,YAAO,GAAP,OAAO,CAAgB;QACvB,gBAAW,GAAX,WAAW,CAAc;QACzB,WAAM,GAAN,MAAM,CAAS;QACf,sBAAiB,GAAjB,iBAAiB,CAAoB;QACrC,oBAAe,GAAf,eAAe,CAAkB;QARpD,cAAS,GAAG,kDAAkB,EAAE,CAAC;QACjC,aAAQ,GAAG,EAAC,qBAAqB,EAAG,IAAI,EAAC;QAQ3B,yCAAyC;QACzC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,WAAW,EAAG,CAAC,EAAE,CAAC;YAClB,KAAK,EAAG,CAAC,EAAE,CAAC;YACZ,SAAS,EAAG,CAAC,EAAE,CAAC;YAChB,SAAS,EAAG,CAAC,EAAE,CAAC;SACjB,CAAC,CAAC;IACL,CAAC;IAGb,gCAAU,GAAV;QAAA,iBAUC;QATC,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC;QAC9C,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;aAC5B,IAAI,CAAC;YACJ,KAAI,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;YACrC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACjC,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;QACnC,CAAC,CAAC,CAAC,KAAK,CAAC;YACP,OAAO,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QACnC,CAAC,CAAC;IACJ,CAAC;IAGD,8BAAQ,GAAR,cAAY,CAAC;IAEP,2BAAK,GAAX,UAAY,GAAY;;;;;4BACR,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,OAAO,EAAE,yBAAyB;4BAClC,QAAQ,EAAE,IAAI;yBACf,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACF,KAAK,CAAC,OAAO,EAAE,CAAC;;;;;KACjB;IAEK,6BAAO,GAAb;;;;;4BACkB,qBAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;4BAClD,OAAO,EAAE,YAAY;4BACrB,QAAQ,EAAE,IAAI;yBACf,CAAC;;wBAHI,OAAO,GAAG,SAGd;wBACF,qBAAM,OAAO,CAAC,OAAO,EAAE;;wBAAvB,SAAuB,CAAC;;;;;KACzB;IApDU,WAAW;QALvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,+FAAkC;;SAEnC,CAAC;+EAS6B,4DAAa;YACT,0DAAW;YAChB,sDAAM;YACK,gEAAiB;YACnB,8DAAe;OAZzC,WAAW,CAsDvB;IAAD,kBAAC;CAAA;AAtDuB","file":"produto-produto-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ProdutoPage } from './produto.page';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProdutoPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes),\r\n    ReactiveFormsModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [ProdutoPage]\r\n})\r\nexport class ProdutoPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Novo Produto</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"cadastrarP()\\\">\\r\\n    <ion-list>\\r\\n      <ion-item>\\r\\n        <ion-label floating>Nome Produto</ion-label>\\r\\n        <ion-input formControlName=\\\"nomeProduto\\\" type=\\\"text\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label floating>Preço</ion-label>\\r\\n        <ion-input formControlName=\\\"preco\\\" type=\\\"text\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label floating>Categoria</ion-label>\\r\\n        <ion-input formControlName=\\\"categoria\\\" type=\\\"text\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n        <ion-label floating>Descrição</ion-label>\\r\\n        <ion-input formControlName=\\\"descricao\\\" type=\\\"text\\\"></ion-input>\\r\\n      </ion-item>\\r\\n    </ion-list>\\r\\n    <ion-button color=\\\"dark\\\" outline>Cadastrar</ion-button>\\r\\n  </form>\\r\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2R1dG8vcHJvZHV0by5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { NavController, NavParams, LoadingController, ToastController } from '@ionic/angular';\r\nimport * as firebase from 'firebase';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-produto',\r\n  templateUrl: './produto.page.html',\r\n  styleUrls: ['./produto.page.scss'],\r\n})\r\nexport class ProdutoPage implements OnInit {\r\n\r\n  \r\n\r\n  firestore = firebase.firestore();\r\n  settings = {timestampsInSnapshots : true}\r\n  formGroup : FormGroup;\r\n\r\n  constructor(public navCtrl : NavController,\r\n              public formBuilder : FormBuilder,\r\n              public rauter : Router,\r\n              public loadingController : LoadingController,\r\n              public toastController : ToastController) { \r\n                //this.firestore.settings(this.settings);\r\n                this.formGroup = this.formBuilder.group({\r\n                  nomeProduto : [''],\r\n                  preco : [''],\r\n                  categoria : [''],\r\n                  descricao : [''],\r\n                });\r\n              }\r\n\r\n\r\n  cadastrarP(){\r\n    let ref = this.firestore.collection('produto')\r\n    ref.add(this.formGroup.value)\r\n    .then(()=>{\r\n      this.toast('Cadastrado com Sucesso');\r\n      this.rauter.navigate(['/index']);\r\n      this.loadingController.dismiss();\r\n    }).catch(()=>{\r\n      console.log('Erro ao Cadastrar');\r\n    })\r\n  }\r\n\r\n  \r\n  ngOnInit() {}\r\n\r\n  async toast(msg : string) {\r\n    const toast = await this.toastController.create({\r\n      message: 'Cadastrado com sucesso!',\r\n      duration: 2000\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  async loading() {\r\n    const loading = await this.loadingController.create({\r\n      message: 'Carregando',\r\n      duration: 2000\r\n    });\r\n    await loading.present();\r\n  }\r\n\r\n}\r\n"],"sourceRoot":""}