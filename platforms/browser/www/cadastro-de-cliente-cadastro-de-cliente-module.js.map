{"version":3,"sources":["webpack:///./src/app/cadastro-de-cliente/cadastro-de-cliente.module.ts","webpack:///./src/app/cadastro-de-cliente/cadastro-de-cliente.page.html","webpack:///./src/app/cadastro-de-cliente/cadastro-de-cliente.page.scss","webpack:///./src/app/cadastro-de-cliente/cadastro-de-cliente.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AAEQ;AAEV;AAEsB;AACtB;AACQ;AAErD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+EAAqB;KACjC;CACF,CAAC;AAYF;IAAA;IAA0C,CAAC;IAA9B,2BAA2B;QAVvC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,kEAAmB;gBACnB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,+EAAqB,CAAC;SACtC,CAAC;OACW,2BAA2B,CAAG;IAAD,kCAAC;CAAA;AAAH;;;;;;;;;;;;AC5BxC,i5B;;;;;;;;;;;ACAA,+DAA+D,2K;;;;;;;;;;;;;;;;;;;;;;ACAb;AACb;AACmB;AACf;AAE2B;AAOpE;IAOE,+BAAmB,WAAyB,EACzB,MAAe,EACf,iBAAqC,EACrC,eAAiC;QAHjC,gBAAW,GAAX,WAAW,CAAc;QACzB,WAAM,GAAN,MAAM,CAAS;QACf,sBAAiB,GAAjB,iBAAiB,CAAoB;QACrC,oBAAe,GAAf,eAAe,CAAkB;QAPpD,cAAS,GAAG,kDAAkB,EAAE,CAAC;QACjC,aAAQ,GAAG,EAAC,qBAAqB,EAAG,IAAI,EAAC,CAAC;QAOxC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,IAAI,EAAG,CAAC,EAAE,CAAC;YACX,KAAK,EAAG,CAAC,EAAE,CAAC;YACZ,KAAK,EAAG,CAAC,EAAE,CAAC;SACb,CAAC;IACJ,CAAC;IAED,wCAAQ,GAAR;IACA,CAAC;IAED,yCAAS,GAAT;QAAA,iBAaC;QAXC,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC;QAC9C,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;aAC5B,IAAI,CAAC;YACJ,KAAI,CAAC,KAAK,CAAC,wBAAwB,CAAC,CAAC;YACrC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;QACnC,CAAC,CAAC,CAAC,KAAK,CAAC;YACP,KAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;YAChC,KAAI,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC;QACnC,CAAC,CAAC;IACJ,CAAC;IAEK,qCAAK,GAAX,UAAY,GAAY;;;;;4BACR,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,OAAO,EAAE,yBAAyB;4BAClC,QAAQ,EAAE,IAAI;yBACf,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBACF,KAAK,CAAC,OAAO,EAAE,CAAC;;;;;KACjB;IAEK,uCAAO,GAAb;;;;;4BACkB,qBAAM,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;4BAClD,OAAO,EAAE,YAAY;4BACrB,QAAQ,EAAE,IAAI;yBACf,CAAC;;wBAHI,OAAO,GAAG,SAGd;wBACF,qBAAM,OAAO,CAAC,OAAO,EAAE;;wBAAvB,SAAuB,CAAC;;;;;KACzB;IAlDU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,mIAA8C;;SAE/C,CAAC;+EAQiC,0DAAW;YAChB,sDAAM;YACK,gEAAiB;YACnB,8DAAe;OAVzC,qBAAqB,CAwDjC;IAAD,4BAAC;CAAA;AAxDiC","file":"cadastro-de-cliente-cadastro-de-cliente-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { CadastroDeClientePage } from './cadastro-de-cliente.page';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CadastroDeClientePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [CadastroDeClientePage]\r\n})\r\nexport class CadastroDeClientePageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>CadastroDeCliente</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n  <form [formGroup]=\\\"formGroup\\\" (ngSubmit)=\\\"cadastrar()\\\">\\r\\n    <ion-list>\\r\\n      <ion-item>\\r\\n        <ion-label>Nome</ion-label>\\r\\n        <ion-input formControlName=\\\"nome\\\" type=\\\"text\\\"></ion-input>\\r\\n      </ion-item>\\r\\n      <ion-item>\\r\\n          <ion-label>Email</ion-label>\\r\\n          <ion-input formControlName=\\\"email\\\" type=\\\"text\\\"></ion-input>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n            <ion-label>Senha</ion-label>\\r\\n            <ion-input formControlName=\\\"senha\\\" type=\\\"password\\\"></ion-input>\\r\\n          </ion-item>\\r\\n    </ion-list>\\r\\n    <ion-button expand=\\\"full\\\" type=\\\"submit\\\" fill=\\\"outline\\\" color=\\\"dark\\\" (click)=\\\"cadastrar()\\\">Cadastrar</ion-button>\\r\\n  </form>\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NhZGFzdHJvLWRlLWNsaWVudGUvY2FkYXN0cm8tZGUtY2xpZW50ZS5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport * as firebase from 'firebase';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Cliente } from '../model/cliente';\r\nimport { LoadingController, ToastController } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-cadastro-de-cliente',\r\n  templateUrl: './cadastro-de-cliente.page.html',\r\n  styleUrls: ['./cadastro-de-cliente.page.scss'],\r\n})\r\nexport class CadastroDeClientePage implements OnInit {\r\n\r\n  listaDeClientes: any[];\r\n  firestore = firebase.firestore();\r\n  settings = {timestampsInSnapshots : true};\r\n  formGroup : FormGroup;\r\n\r\n  constructor(public formBuilder : FormBuilder,\r\n              public rauter : Router,\r\n              public loadingController : LoadingController,\r\n              public toastController : ToastController) {\r\n    this.formGroup = this.formBuilder.group({\r\n      nome : [''],\r\n      email : [''],\r\n      senha : [''],\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  cadastrar(){\r\n\r\n    this.loading();\r\n    let ref = this.firestore.collection('cliente')\r\n    ref.add(this.formGroup.value)\r\n    .then(()=>{\r\n      this.toast('Cadastrado com Sucesso');\r\n      this.rauter.navigate(['/list']);\r\n      this.loadingController.dismiss();\r\n    }).catch(()=>{\r\n      this.toast('Erro ao Cadastrar');\r\n      this.loadingController.dismiss();\r\n    })\r\n  }\r\n\r\n  async toast(msg : string) {\r\n    const toast = await this.toastController.create({\r\n      message: 'Cadastrado com sucesso!',\r\n      duration: 2000\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  async loading() {\r\n    const loading = await this.loadingController.create({\r\n      message: 'Carregando',\r\n      duration: 2000\r\n    });\r\n    await loading.present();\r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n}\r\n"],"sourceRoot":""}